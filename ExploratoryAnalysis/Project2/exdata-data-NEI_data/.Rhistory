airquality = transform(airquality, Month=factor(Month))
qplot(Wind, Ozone, data = airquality, facets=.~Month)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets=.~factor(Month))
airquality = transform(airquality, Month=factor(Month))
qplot(Wind, Ozone, data = airquality, facets=.~Month)
g <- ggplot(movies, aes(votes, rating))
print(g)
movies
aes(votes, rating)
g <- ggplot(movies, aes(votes, rating))
print(g)
head(movies)
?aes
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, smooth = "loess")
library(nlme)
?axis
?llines
getwd()
?merge
setwd("./Repositories//Coursera_DataScienceSpe//GettingCleaningData//Project2//UCI HAR Dataset/")
Xtrain.init <- read.table("train/X_train.txt", nrows = 100)
Xtrain.classes <- sapply(Xtrain.init, class)
Xtrain <- read.table("train/X_train.txt", colClasses = Xtrain.classes)
dim(Xtrain)
ytrain.init <- read.table("train/y_train.txt", nrows = 100)
ytrain.classes <- sapply(ytrain.init, class)
ytrain <- read.table("train/y_train.txt", colClasses = ytrain.classes)
dim(ytrain)
strain.init <- read.table("train/subject_train.txt", nrows = 100)
strain.classes <- sapply(strain.init, class)
strain <- read.table("train/subject_train.txt", colClasses = strain.classes)
dim(strain)
Xtest.init <- read.table("test/X_test.txt", nrows = 100)
Xtest.classes <- sapply(Xtest.init, class)
Xtest <- read.table("test/X_test.txt", colClasses = Xtest.classes)
dim(Xtest)
ytest.init <- read.table("test/y_test.txt", nrows = 100)
ytest.classes <- sapply(ytest.init, class)
ytest <- read.table("test/y_test.txt", colClasses = ytest.classes)
dim(ytest)
stest.init <- read.table("test/subject_test.txt", nrows = 100)
stest.classes <- sapply(stest.init, class)
stest <- read.table("test/subject_test.txt", colClasses = stest.classes)
dim(stest)
train <- cbind(strain, ytrain, Xtrain)
dim(train)
test <- cbind(stest, ytest, Xtest)
dim(test)
features <- read.table("features.txt")
X.columns <- as.vector(features[["V2"]])
y.columns <- c("activity")
s.columns <- c("subject")
test <- cbind(stest, Xtest, ytest)
train <- cbind(strain, Xtrain, ytrain)
columns <- c("subject", as.vector(features[["V2"]]), "activity")
dim(columns)
c(c("subject","activity"),as.vector(features[["V2"]]))
columns <- c(c("subject"), as.vector(features[["V2"]]), c("activity"))
dim(columns)
c("subject", as.vector(features[["V2"]]), "activity")
features <- read.table("features.txt")
columns <- c("subject", as.vector(features[["V2"]]), "activity")
colnames(dataset) <- columns
dataset <- rbind(train, test)
dim(dataset)
colnames(dataset)
colnames(dataset) <- columns
colnames(dataset)
head(dataset)
labels <- read.table("activity_labels.txt")
dataset$activity <- factor(dataset$activity, levels=seq(1,6), labels=as.vector(labels[["V2"]]))
head(dataset)
mean.columns <- grep("-mean\\(\\)", columns, value=TRUE)
std.columns <- grep("-std\\(\\)", columns, value=TRUE)
dataset <- subset(dataset, select=c("subject", mean.columns, std.columns, "activity"))
dim(dataset)
head(dataset)
?aggregate
tidy.data <-aggregate(dataset, by=list(subject,activity), FUN=mean, na.rm=TRUE)
tidy.data <-aggregate(dataset, by=list("subject","activity"), FUN=mean, na.rm=TRUE)
head(dataset)
tidy.data <-aggregate(dataset, by=list("subject","activity"), FUN=mean, na.rm=TRUE)
tidy.data <-aggregate(dataset, by=c("subject","activity"), FUN=mean, na.rm=TRUE)
tidy.data <-aggregate(dataset, by=list("subject","activity"), FUN=mean, na.rm=TRUE)
tidy.data <-aggregate(dataset, by=list(dataset$subject, dataset$activity), FUN=mean, na.rm=TRUE)
head(tidy.data)
featCol <- as.vector(features[["V2"]])
head(dataset[featCol])
head(dataset[,featCol])
head(featCol)
dataset[,featCol]
head(dataset[,mean.columns])
feat.columns <- c(grep("-mean\\(\\)", columns, value=TRUE), grep("-std\\(\\)", columns, value=TRUE))
dim(feat.columns)
feat.columns
tidy.data <-aggregate(dataset[,feat.columns], by=list(dataset$subject, dataset$activity), FUN=mean, na.rm=TRUE)
head(tidy.data)
cls
getwd()
source("../run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
colnames(tidy.data)
colnames(tidy.data) <- c("subject", "activity", keep.features)
colnames(tidy.data)
head(tidy.data)
source("run_analysis.R")
head(tidy.data)
source("run_analysis.R")
head(tidy.data)
dataset$subject
source("run_analysis.R")
head(tidy.data)
?write.table
write.table(tidy.data, file="test.txt")
source("run_analysis.R")
tidy.data[,subject,activity]
tidy.data[,c(subject,activity)]
tidy.data[,c("subject"","activity")]
tidy.data$subject
tidy.data$activity
getwd()
source("run_analysis.R")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
?download.file
getwd()
setwd("/Users/Mariame/Repositories/Coursera_DataScience_Spe/GettingCleaningData")
setwd("/Users/Mariame/Repositories/Coursera_DataScience_Spe/GettingCleaningData/Quizzes/")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv","ss06hid.csv")
ls()
df <- read.csv("ss06hid.csv",header = TRUE)
head(df)
head(df[df$ACR==3])
colnames(df)
head(df[df$ACR=3])
head(df$ACR)
df
df10 <- subset(df, df$ACR == 3)
df10 <- subset(df, df$ACR == 3 & df$AGS == 6)
logvect <- df$ACR == 3 & df$AGS == 6
logvect
agricultureLogical <- df$ACR == 3 & df$AGS == 6
which(agricultureLogical)
install.packages(jpeg)
install.packages("jpeg")
library(jpeg)
img <- readJPEG("jeff.jpg", native=TRUE)
quantile(img, probs=c(0.3,0.7))
quantile(img, probs=c(0.3,0.8))
gdp <- read.csv("GDP.csv")
head(gdp)
?read.csv
gdp <- read.csv("GDP.csv", skip=5)
head(gdp)
gdp <- read.csv("GDP.csv", skip=4)
head(gdp)
eds <- read.csv("EDSTATS.csv", header=TRUE)
head(eds)
colnames(gdp)
colnames(eds)
colnames(gdp) <- c("CountryCode","Ranking","Blank","Economy","GDP")
head(gdp)
tbl <- merge(gdp,eds,by="CountryCode")
head(tbl)
tbl <- merge(eds,gdp,by="CountryCode",all.x=TRUE)
?order
stbl <- tbl[order(tbl$Ranking, decreasing=TRUE)]
tbl[order(tbl$Ranking, decreasing=TRUE)]
colnames(tbl)
tbl$Ranking
?read.csv
eds <- read.csv("EDSTATS.csv", header=TRUE, na.strings="<NA>")
tbl <- merge(eds,gdp,by="CountryCode",all.x=TRUE)
gdp <- read.csv("GDP.csv", skip=4, na.strings="<NA>")
colnames(gdp) <- c("CountryCode","Ranking","Blank","Economy","GDP")
tbl <- merge(eds,gdp,by="CountryCode",all.x=TRUE)
head(tbl)
tbl$Ranking
?order
tbl[order(tbl$Ranking, decreasing=TRUE),]
stbl <- tbl[order(tbl$Ranking, decreasing=TRUE),]
r13 <- stbl[13,"CountryCode"]
r13
stbl[13,"CountryCode"]
stbl[13,]
stbl[stbl$Ranking == 13,]
ageds <- aggregate(eds, by=c("Income_Group"))
ageds <- aggregate(eds, by=c("Income_Group"), FUN=mean)
colnames(eds)
ageds <- aggregate(eds, by=list(Income.Group), FUN=mean)
ageds <- aggregate(eds, by=list(eds$Income.Group), FUN=mean)
?aggregate
ageds
ageds <- aggregate(tbl$GDP, by=list(tbl$Income.Group), FUN=mean)
ageds
gdp <- read.csv("GDP.csv")
head(gdp)
gdp <- read.csv("GDP.csv")
head(gdp)
tbl <- merge(eds,gdp,by="CountryCode",all.x=TRUE)
stbl <- tbl[order(tbl$Ranking, decreasing=TRUE),]
ageds <- aggregate(tbl$GDP, by=list(tbl$Income.Group), FUN=mean)
head(ageds)
subs <- subset(stbl,!is.na(stbl$GDP))
ageds <- aggregate(subs$GDP, by=list(subs$Income.Group), FUN=mean)
head(ageds)
ageds <- aggregate(subs$Ranking, by=list(subs$Income.Group), FUN=mean)
ageds
ageds <- aggregate(tbl$Ranking, by=list(tbl$Income.Group), FUN=mean)
ageds
df <- tbl
source("applyQuintiles.R")
q <- cut(tbl, breaks=c(quantile(tbl$Ranking, probs = seq(0, 1, by = 0.20))), labels=c("0-20","20-40","40-60","60-80","80-100"), include.lowest=TRUE)
q <- cut(tbl, breaks=c(quantile(tbl$Ranking, probs = seq(0, 1, by = 0.20))))
quantile(tbl$Ranking, probs = seq(0, 1, by = 0.20))
quantile(tbl$Ranking, probs = seq(0, 1, by = 0.20), na.rm=TRUE)
q <- cut(tbl, breaks=c(quantile(tbl$Ranking, probs = seq(0, 1, by = 0.20), na.rm=TRUE)))
q <- cut(tbl$Ranking, breaks=c(quantile(tbl$Ranking, probs = seq(0, 1, by = 0.20), na.rm=TRUE)))
q
q <- cut(tbl$Ranking, breaks=c(quantile(tbl$Ranking, probs = seq(0, 1, by = 0.20), na.rm=TRUE)), labels=c("0-20","20-40","40-60","60-80","80-100"))
tbl <- cbind(q, tbl)
head(tbl)
q <- cut(tbl$Ranking, breaks=c(quantile(tbl$Ranking, probs = seq(0, 1, by = 0.20), na.rm=TRUE)))
tbl <- cbind(q, tbl)
head(tbl)
colnames(tbl)[1]
colnames(tbl)[1] <- "Good"
colnames(tbl)
?aggregate
aggregate(tbl$CountryCode, by=list(tbl$Good), FUN=count)
tbl <- cbind("1", tbl)
head(tbl)
colnames(tbl)[1] <- "Count"
head(tbl)
aggregate(tbl$Count, by=list(tbl$Good), FUN=sum)
tbl <- cbind(1, tbl)
colnames(tbl)[1] <- "Count1"
aggregate(tbl$Count1, by=list(tbl$Good), FUN=sum)
aggregate(tbl$Count1, by=list(tbl$Good,tbl$CountryCode), FUN=sum)
t <- aggregate(tbl$Count1, by=list(tbl$Good,tbl$CountryCode), FUN=sum)
colnames(t)
aggregate(t$x, by=list(t$Group.1), FUN=sum)
q <- cut(stbl$Ranking, breaks=c(quantile(stbl$Ranking, probs = seq(0, 1, by = 0.20), na.rm=TRUE)))
q
s <- cbind(q,stbl)
head(s)
ageds
s
ageds
q
ageds
unique(q)
s[s$Income.Group=="Lower middle income" & s$q=="(1,38.6]"]
colnames(s)
v <- s[s$Income.Group=="Lower middle income" & s$q=="(1,38.6]",]
v
dim(v)
tbl2 <- merge(eds,gdp,by="CountryCode")
t <- tbl2[!is.na(tbl2$CountryCode),]
getwd()
setwd("../../ExploratoryAnalysis//Project")
getwd()
setwd("./exdata-data-NEI_data/")
data <- read.table("summarySCC_PM25.rds")
head(data)
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
head(NEI)
png("plot1.png")
boxplot(log10(Emissions)~year,NEI,xlab="Year",ylab="Log10 Emissions PM2.5", main="Total Emissions from PM2.5 in the US from 1999 to 2008")
dev.off()
balt <- NEI[NEI$fips == "24510"]
balt <- NEI[NEI$fips == "24510",]
png("plot2.png")
boxplot(log10(Emissions)~year,balt,xlab="Year",ylab="Log10 Emissions PM2.5", main="Total Emissions from PM2.5 in Baltimore City, MD from 1999 to 2008")
dev.off()
png("plot2.png")
boxplot(log10(Emissions)~year,balt,xlab="Year",ylab="Log10 Emissions PM2.5", main="Total Emissions from PM2.5 in Baltimore City, MD from 1999 to 2008")
dev.off()
png("plot1.png")
boxplot(log10(Emissions)~year,NEI,xlab="Year",ylab="Log10 Emissions PM2.5", main="Emissions from PM2.5 in the US from 1999 to 2008")
dev.off()
library(ggplot2)
png("plot3.png")
ggplot(balt, aes(x=year, y=Emissions))+ geom_point() + geom_line() + facet_grid(.~type)
dev.off()
png("plot3.png")
ggplot(balt, aes(x=year, y=log10(Emissions)))+ geom_point() + geom_line() + facet_grid(.~type)
dev.off()
png("plot3.png")
ggplot(balt, aes(x=year, y=Emissions)) + geom_line() + facet_grid(.~type)
dev.off()
?qplot
png("plot32.png")
qplot(year, Emissions, data=balt, facets=.~type, main="Emssions from PM2.5 By Type in Baltimore")
dev.off()
png("plot32.png")
qplot(year, Emissions, data=balt, facets=.~type, main="Emssions from PM2.5 By Type in Baltimore") + geom_line()
dev.off()
head(SCC)
unique(SCC$Short.Name)
which("coal" %in% unique(SCC$Short.Name))
unique(SCC$EI)
?grep
grep('*[cC]oal*',SCC$Short.Name)
SCC[grep('*[cC]oal*',SCC$Short.Name)]
SCC[grep('*[cC]oal*',SCC$Short.Name),]
t <- SCC[grep('*[cC]oal*',SCC$Short.Name),]
unique(t$Short.Name)
unique(SCC$EI)
SCC$EI[grep('*[cC]oal*',SCC$EI,]
t <- SCC[grep('*[cC]oal*',SCC$EI,]
t <- SCC[grep('*[cC]oal*',SCC$EI)]
t <- SCC[grep('*[cC]oal*',SCC$EI),]
unique(t$EI)
t <- SCC[grep('Fuel Comb*[cC]oal*',SCC$EI),]
unique(t$EI)
t <- SCC[grep('fuel comb*[ ]*coal',SCC$EI),]
unique(t$EI)
SCC$EI[grep("coal", SCC$EI, ignore.case=TRUE)]
unique(SCC$EI[grep("coal", SCC$EI, ignore.case=TRUE)])
colnames(SCC)
unique(SCC$EI.Sector[grep("coal", SCC$EI.Sector, ignore.case=TRUE)])
SCC[grep("coal", SCC$EI.Sector, ignore.case=TRUE)]
head(SCC[grep("coal", SCC$EI.Sector, ignore.case=TRUE),])
unique(SCC$SCC[grep("coal", SCC$EI.Sector, ignore.case=TRUE)])
t <- unique(SCC$SCC[grep("coal", SCC$EI.Sector, ignore.case=TRUE)])
dim(t)
t
SCC$SCC[grep("coal", SCC$EI.Sector, ignore.case=TRUE)]
codes <- SCC$SCC[grep("coal", SCC$EI.Sector, ignore.case=TRUE)]
coal <- NEI[NEI$SCC %in% codes]
coal <- NEI[NEI$SCC %in% codes,]
dim(coal)
?geom_boxplot
png("plot4.png")
qplot(year, Emissions, data=coal, main="Emssions from PM2.5 in the US from Coal Combustion") + geom_boxplot()
dev.off()
png("plot4.png")
qplot(year, log10(Emissions), data=coal, main="Emssions from PM2.5 in the US from Coal Combustion") + geom_boxplot()
ev.off()
dev.off()
png("plot3.png")
qplot(year, Emissions, data=balt, facets=.~type, main="Emssions from PM2.5 By Type in Baltimore") + geom_line()
dev.off()
png("plot4.png")
qplot(year, log10(Emissions), data=coal, main="Emssions from PM2.5 in the US from Coal Combustion") + geom_line()
ev.off()
dev.off()
png("plot4.png")
boxplot(log10(Emissions)~year,coal,xlab="Year",ylab="Log10 Emissions PM2.5", main="Emissions from PM2.5 from Coal Combustion")
dev.off()
png("plot4.png")
boxplot(log10(Emissions)~year, coal, xlab="Year", ylab="Log10 Emissions PM2.5", main="Emissions from PM2.5 from Coal Combustion")
dev.off()
agg <- aggregate(NEI$Emissions, by=list(NEI$year, NEI$type), FUN=sum)
agg
plot(Group.1, x, data=agg)
?plot
plot(agg$Group.1, agg$x)
totByYear <- aggregate(NEI$Emissions, by=list(NEI$year), FUN=sum)
hist(totByYear$x)
totByYear
plot(totByYear$Group.1, totByYear$x, xlab="Year", ylab="Emissions", main="Total Emissions from PM2.5 in the US")
plot(totByYear$Group.1, totByYear$x, type="l", xlab="Year", ylab="Emissions", main="Total Emissions from PM2.5 in the US")
plot(totByYear$Group.1, totByYear$x, type="l", xlab="Year", ylab="Emissions", main="Total Emissions from PM2.5 in the US", pch=19)
plot(totByYear$Group.1, totByYear$x, type="o", xlab="Year", ylab="Emissions", main="Total Emissions from PM2.5 in the US", pch=19)
balt.total <- aggregate(balt$Emissions, by=list(balt$year), FUN=sum)
plot(balt.total$Group.1, balt.total$x, type="o", pch=19, xlab="Year", ylab="Emissions", main="Total Emissions from PM2.5 in Baltimore City")
balt.types <- aggregate(balt$Emissions, by=list(balt$year,balt$type), FUN=sum)
balt.types
qplot(Group.1, x, data=balt.types, facets=.~Group.2, main="Emssions from PM2.5 By Type in Baltimore City", xlab="Year", ylab="Emissions") + geom_line()
coal.total <- aggregate(coal$Emissions, by=list(coal$year), FUN=sum)
qplot(Group.1, x, data=balt.types, main="Emssions from PM2.5 from Coal Combustion in the US", xlab="Year", ylab="Emissions") + geom_line()
coal.total
qplot(Group.1, x, data=coal.total, main="Emssions from PM2.5 from Coal Combustion in the US", xlab="Year", ylab="Emissions") + geom_line()
grep("motor", balt, ignore.case=TRUE)
grep("motor", SCC, ignore.case=TRUE)
colnames(SCC)
grep("motor", SCC$SCC.Level.Four, ignore.case=TRUE)
grep("motor", SCC$SCC.Level.Three, ignore.case=TRUE)
grep("motor", SCC$SCC.Level.Two, ignore.case=TRUE)
grep("motor", SCC$SCC.Level.One, ignore.case=TRUE)
grep("motor", SCC$Short.Name, ignore.case=TRUE)
q5bynames <- SCC[grep("motor", SCC$Short.Name, ignore.case=TRUE),]
q5bylevel <- SCC[grep("motor", SCC$SCC.Level.Three, ignore.case=TRUE),]
q5bynames$SCC[grep("vehicle", q5bynames$Short.Name, ignore.case=TRUE),]
q5bynames$SCC[grep("vehicle", q5bynames$Short.Name, ignore.case=TRUE)]
q5bylevel[grep("vehicle", q5bylevel$SCC.Level.Three, ignore.case=TRUE)]
q5bylevel$SCC[grep("vehicle", q5bylevel$SCC.Level.Three, ignore.case=TRUE)]
level3 <- SCC[grep("motor", SCC$SCC.Level.Three, ignore.case=TRUE),]
codes <- level3$SCC[grep("vehicle", level3$SCC.Level.Three, ignore.case=TRUE)]
motor <- balt[balt$SCC %in% codes,]
motor.total <- aggregate(motor$Emissions, by=list(motor$year), FUN=sum)
motor.total
codes
balt[balt$SCC %in% codes,]
SCC$SCC[grep("*motor*", SCC$SCC.Level.Three, ignore.case=TRUE)]
SCC$SCC[grep("motor", SCC$SCC.Level.Three, ignore.case=TRUE)]
level3 <- SCC[grep("motor", SCC$SCC.Level.Three, ignore.case=TRUE),]
level3$SCC[grep("veh", level3$SCC.Level.Three, ignore.case=TRUE)]
level3$SCC[grep("vehicle", level3$SCC.Level.Three, ignore.case=TRUE)]
SCC$EI.Sector[grep("vehicle", SCC$SCC.Level.Three, ignore.case=TRUE),]
SCC$EI.Sector[grep("vehicle", SCC$SCC.Level.Three, ignore.case=TRUE)]
unique(SCC$EI.Sector[grep("vehicle", SCC$SCC.Level.Three, ignore.case=TRUE)])
SCC$EI.Sector[grep("vehicle", SCC$EI.Sector, ignore.case=TRUE)]
unique(SCC$EI.Sector[grep("vehicle", SCC$EI.Sector, ignore.case=TRUE)])
unique(SCC$EI.Sector[grep("vehicle", SCC$SCC.Level.Three, ignore.case=TRUE)])
unique(SCC$SCC.Level.Three[grep("vehicle", SCC$SCC.Level.Three, ignore.case=TRUE)])
unique(SCC$EI.Sector[grep("mobile", SCC$EI.Sector, ignore.case=TRUE)])
mobiles <- SCC$SCC[grep("mobile", SCC$EI.Sector, ignore.case=TRUE),]
mobiles <- SCC$SCC[grep("mobile", SCC$EI.Sector, ignore.case=TRUE)]
motor <- balt[balt$SCC %in% mobiles,]
motor.total <- aggregate(motor$Emissions, by=list(motor$year), FUN=sum)
v <- c('a','b','c','e')
'x' %notin% v
!'x' %in% v
'x' %in% v
!('x' %in% v)
unique(balt$type)
motor <- balt[balt$SCC %in% mobiles & balt$type != "NON-ROAD",]
motor.total <- aggregate(motor$Emissions, by=list(motor$year), FUN=sum)
motor.total
qplot(Group.1, x, data=motor.total, main="Emssions from PM2.5 from Motor Vehicles in Baltimore", xlab="Year", ylab="Emissions") + geom_line()
cities <- NEI[NEI$fips %in% c("24510","06037"),]
f <- factor(cities$fips, levels=c("24510","06037"), labels=c("Baltimore","Los Angeles"))
f
unique(f)
cities <- NEI[NEI$fips %in% c("24510","06037"),]
cities$fips <- factor(cities$fips, levels=c("24510","06037"), labels=c("Baltimore","Los Angeles"))
ities.motor <- cities[cities$SCC %in% mobiles & cities$type != "NON-ROAD",]
cities.motor <- cities[cities$SCC %in% mobiles & cities$type != "NON-ROAD",]
cities.motor.agg <- aggregate(cities.motor$Emissions, by=list(cities.motor$year, cities.motor$fips), FUN=sum)
cities.motor.agg
la <- NEI[NEI$fips == "06037",]
la.motor <- la[la$SCC %in% mobiles & la$type != "NON-ROAD",]
la.motor.agg <- aggregate(la.motor$Emissions, by=list(la.motor$year), FUN=sum)
balt.motor <- balt[balt$SCC %in% mobiles & balt$type != "NON-ROAD",]
balt.motor.agg <- aggregate(balt.motor$Emissions, by=list(balt.motor$year), FUN=sum)
la.motor.agg
balt.motor.agg
colnames(balt.motor.agg) <- c("Year","Baltimore")
colnames(la.motor.agg) <- c("Year","Los.Angeles")
merge(balt.motor.agg, la.motor.agg)
cities <- merge(balt.motor.agg, la.motor.agg)
ggplot(cities, aes(Year)) + geom_line(aes(y = Baltimore)) + geom_line(aes(y = Los.Angeles))
qplot(cities, aes(Year)) + geom_line(aes(y = Baltimore)) + geom_line(aes(y = Los.Angeles))
ggplot(cities, aes(Year)) + geom_line(aes(y = Baltimore)) + geom_line(aes(y = Los.Angeles))
ggplot(cities, aes(Year)) + geom_line(aes(y = Baltimore)) + geom_line(aes(y = Los.Angeles)) + geom_point()
ggplot(cities, aes(Year)) + geom_line(aes(y = Baltimore)) + geom_line(aes(y = Los.Angeles)) + geom_point(aes(y = Baltimore)) + geom_point(aes(y = Los.Angeles))
ggplot(cities, aes(Year)) + geom_line(aes(y = Baltimore, colour="red")) + geom_line(aes(y = Los.Angeles, colour="blue")) + geom_point(aes(y = Baltimore)) + geom_point(aes(y = Los.Angeles))
ggplot(cities, aes(Year)) + geom_line(aes(y = Baltimore, colour="Baltimore")) + geom_line(aes(y = Los.Angeles, colour="Los.Angeles")) + geom_point(aes(y = Baltimore, colour="Baltimore")) + geom_point(aes(y = Los.Angeles, colour="Los.Angeles"))
ggplot(cities, aes(Year), xlab="Year", ylab="Emissions", main="Emissions from PM2.5 in Baltimore and Los Angeles") + geom_line(aes(y = Baltimore, colour="Baltimore")) + geom_line(aes(y = Los.Angeles, colour="Los.Angeles")) + geom_point(aes(y = Baltimore, colour="Baltimore")) + geom_point(aes(y = Los.Angeles, colour="Los.Angeles"))
ggplot(cities, aes(Year), xlab="Year", ylab="Emissions", main="Emissions from PM2.5 in Baltimore and Los Angeles") + geom_line(aes(y = Baltimore, ylab="Emissions", colour="Baltimore")) + geom_line(aes(y = Los.Angeles, colour="Los.Angeles")) + geom_point(aes(y = Baltimore, colour="Baltimore")) + geom_point(aes(y = Los.Angeles, colour="Los.Angeles"))
ggplot(cities, aes(Year), xlab="Year", ylab="Emissions", main="Emissions from PM2.5 in Baltimore and Los Angeles") + geom_line(aes(y = Baltimore, ylab="Emissions", colour="Baltimore")) + geom_line(aes(y = Los.Angeles, colour="Los.Angeles")) + geom_point(aes(y = Baltimore, colour="Baltimore")) + geom_point(aes(y = Los.Angeles, colour="Los.Angeles"))
?ggplot
ggplot(cities, aes(Year, xlab="Year", ylab="Emissions", main="Emissions from PM2.5 in Baltimore and Los Angeles")) + geom_line(aes(y = Baltimore, ylab="Emissions", colour="Baltimore")) + geom_line(aes(y = Los.Angeles, colour="Los.Angeles")) + geom_point(aes(y = Baltimore, colour="Baltimore")) + geom_point(aes(y = Los.Angeles, colour="Los.Angeles"))
?ggtitle
ggplot(cities, aes(Year)) + geom_line(aes(y = Baltimore, ylab="Emissions", colour="Baltimore")) + geom_line(aes(y = Los.Angeles, colour="Los.Angeles")) + geom_point(aes(y = Baltimore, colour="Baltimore")) + geom_point(aes(y = Los.Angeles, colour="Los.Angeles")) + ggtitle(xlab="Year", ylab="Emissions", main="Emissions from PM2.5 in Baltimore and Los Angeles")
ggplot(cities, aes(Year)) + geom_line(aes(y = Baltimore, ylab="Emissions", colour="Baltimore")) + geom_line(aes(y = Los.Angeles, colour="Los.Angeles")) + geom_point(aes(y = Baltimore, colour="Baltimore")) + geom_point(aes(y = Los.Angeles, colour="Los.Angeles")) + xlab("Year") + ylab("Emissions") + ggtitle("Emissions from PM2.5 in Baltimore and Los Angeles")
ggplot(cities, aes(Year)) + geom_line(aes(y = Baltimore, ylab="Emissions", colour="Baltimore")) + geom_line(aes(y = Los.Angeles, colour="Los.Angeles")) + geom_point(aes(y = Baltimore, colour="Baltimore")) + geom_point(aes(y = Los.Angeles, colour="Los.Angeles")) + xlab("Year") + ylab("Emissions") + ggtitle("Emissions from PM2.5 in Baltimore and Los Angeles") + theme(legend.title=element_blank())
source("run_analysis.R")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
source("run_analysis.R")
png("plot3.png")
qplot(Group.1, x, data=b.types, facets=.~Group.2, main="Emssions from PM2.5 By Type in Baltimore City", xlab="Year", ylab="Emissions") + geom_line()
dev.off()
png("plot4.png")
qplot(Group.1, x, data=coal.total, main="Emssions from PM2.5 from Coal Combustion in the US", xlab="Year", ylab="Emissions") + geom_line()
dev.off()
png("plot5.png")
qplot(Group.1, x, data=balt.motor.agg, main="Emssions from PM2.5 from Motor Vehicles in Baltimore", xlab="Year", ylab="Emissions") + geom_line()
qplot(Baltimore, Year, data=balt.motor.agg, main="Emssions from PM2.5 from Motor Vehicles in Baltimore", xlab="Year", ylab="Emissions") + geom_line()
dev.off()
png("plot6.png")
ggplot(cities, aes(Year)) + geom_line(aes(y = Baltimore, ylab="Emissions", colour="Baltimore")) + geom_line(aes(y = Los.Angeles, colour="Los.Angeles")) + geom_point(aes(y = Baltimore, colour="Baltimore")) + geom_point(aes(y = Los.Angeles, colour="Los.Angeles")) + xlab("Year") + ylab("Emissions") + ggtitle("Emissions from PM2.5 in Baltimore and Los Angeles") + theme(legend.title=element_blank())
dev.off()
png("plot5.png")
qplot(Year, Baltimore, data=balt.motor.agg, main="Emissions from PM2.5 from Motor Vehicles in Baltimore", xlab="Year", ylab="Emissions") + geom_line()
dev.off()
source("plot1.R")
plot(total$Group.1, total$x, type="o", pch=19, xlab="Year", ylab="Emissions", main="Total PM2.5 Emissions in the US")
plot(total$Year, total$Emissions, type="o", pch=19, xlab="Year", ylab="Emissions", main="Total PM2.5 Emissions in the US")
dev.off()
source("plot2.R")
source("plot3.R")
source("plot3.R")
source("plot3.R")
codes1 <- SCC$SCC[grep("coal", SCC$EI.Sector, ignore.case=TRUE),]
codes1 <- SCC$SCC[grep("coal", SCC$EI.Sector, ignore.case=TRUE)]
codes2 <- SCC$SCC[grep("comb", SCC$EI.Sector, ignore.case=TRUE)]
merge(codes1,codes2)
head(codes1)
intersect(codes1,codes2)
source("plot4.R")
source("plot4.R")
source("plot5.R")
source("plot5.R")
source("plot6.R")
source("plot6.R")
source("plot6.R")
source("plot6.R")
source("plot6.R")
source("plot1.R")
source("plot2.R")
source("plot3.R")
source("plot4.R")
source("plot5.R")
source("plot6.R")
